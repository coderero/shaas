/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_CONFIG_CONFIG_PB_H_INCLUDED
#define PB_CONFIG_CONFIG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _config_RelayType {
    config_RelayType_HEAVY_LOAD = 0,
    config_RelayType_LIGHT_LOAD = 1
} config_RelayType;

/* Struct definitions */
typedef struct _config_Climate {
    int64_t id;
    int32_t dht22_port;
    uint32_t aqi_port;
    bool has_buzzer_port;
    int32_t buzzer_port;
} config_Climate;

typedef struct _config_LDR {
    int64_t id;
    uint32_t port;
    pb_callback_t topic;
} config_LDR;

typedef struct _config_Motion {
    int64_t id;
    uint32_t port;
    int32_t relay_channel;
} config_Motion;

typedef struct _config_Relay {
    int64_t id;
    config_RelayType type;
    pb_callback_t topic;
    int32_t lower_channel;
    int32_t upper_channel;
} config_Relay;

typedef struct _config_Config {
    pb_callback_t climate;
    pb_callback_t ldr;
    pb_callback_t motion;
    pb_callback_t relay;
} config_Config;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _config_RelayType_MIN config_RelayType_HEAVY_LOAD
#define _config_RelayType_MAX config_RelayType_LIGHT_LOAD
#define _config_RelayType_ARRAYSIZE ((config_RelayType)(config_RelayType_LIGHT_LOAD+1))




#define config_Relay_type_ENUMTYPE config_RelayType



/* Initializer values for message structs */
#define config_Climate_init_default              {0, 0, 0, false, 0}
#define config_LDR_init_default                  {0, 0, {{NULL}, NULL}}
#define config_Motion_init_default               {0, 0, 0}
#define config_Relay_init_default                {0, _config_RelayType_MIN, {{NULL}, NULL}, 0, 0}
#define config_Config_init_default               {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define config_Climate_init_zero                 {0, 0, 0, false, 0}
#define config_LDR_init_zero                     {0, 0, {{NULL}, NULL}}
#define config_Motion_init_zero                  {0, 0, 0}
#define config_Relay_init_zero                   {0, _config_RelayType_MIN, {{NULL}, NULL}, 0, 0}
#define config_Config_init_zero                  {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define config_Climate_id_tag                    1
#define config_Climate_dht22_port_tag            2
#define config_Climate_aqi_port_tag              3
#define config_Climate_buzzer_port_tag           4
#define config_LDR_id_tag                        1
#define config_LDR_port_tag                      2
#define config_LDR_topic_tag                     3
#define config_Motion_id_tag                     1
#define config_Motion_port_tag                   2
#define config_Motion_relay_channel_tag          3
#define config_Relay_id_tag                      1
#define config_Relay_type_tag                    2
#define config_Relay_topic_tag                   3
#define config_Relay_lower_channel_tag           4
#define config_Relay_upper_channel_tag           5
#define config_Config_climate_tag                1
#define config_Config_ldr_tag                    2
#define config_Config_motion_tag                 3
#define config_Config_relay_tag                  4

/* Struct field encoding specification for nanopb */
#define config_Climate_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    id,                1) \
X(a, STATIC,   SINGULAR, INT32,    dht22_port,        2) \
X(a, STATIC,   SINGULAR, UINT32,   aqi_port,          3) \
X(a, STATIC,   OPTIONAL, INT32,    buzzer_port,       4)
#define config_Climate_CALLBACK NULL
#define config_Climate_DEFAULT NULL

#define config_LDR_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    id,                1) \
X(a, STATIC,   SINGULAR, UINT32,   port,              2) \
X(a, CALLBACK, SINGULAR, STRING,   topic,             3)
#define config_LDR_CALLBACK pb_default_field_callback
#define config_LDR_DEFAULT NULL

#define config_Motion_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    id,                1) \
X(a, STATIC,   SINGULAR, UINT32,   port,              2) \
X(a, STATIC,   SINGULAR, INT32,    relay_channel,     3)
#define config_Motion_CALLBACK NULL
#define config_Motion_DEFAULT NULL

#define config_Relay_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT64,    id,                1) \
X(a, STATIC,   SINGULAR, UENUM,    type,              2) \
X(a, CALLBACK, SINGULAR, STRING,   topic,             3) \
X(a, STATIC,   SINGULAR, INT32,    lower_channel,     4) \
X(a, STATIC,   SINGULAR, INT32,    upper_channel,     5)
#define config_Relay_CALLBACK pb_default_field_callback
#define config_Relay_DEFAULT NULL

#define config_Config_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  climate,           1) \
X(a, CALLBACK, REPEATED, MESSAGE,  ldr,               2) \
X(a, CALLBACK, REPEATED, MESSAGE,  motion,            3) \
X(a, CALLBACK, REPEATED, MESSAGE,  relay,             4)
#define config_Config_CALLBACK pb_default_field_callback
#define config_Config_DEFAULT NULL
#define config_Config_climate_MSGTYPE config_Climate
#define config_Config_ldr_MSGTYPE config_LDR
#define config_Config_motion_MSGTYPE config_Motion
#define config_Config_relay_MSGTYPE config_Relay

extern const pb_msgdesc_t config_Climate_msg;
extern const pb_msgdesc_t config_LDR_msg;
extern const pb_msgdesc_t config_Motion_msg;
extern const pb_msgdesc_t config_Relay_msg;
extern const pb_msgdesc_t config_Config_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define config_Climate_fields &config_Climate_msg
#define config_LDR_fields &config_LDR_msg
#define config_Motion_fields &config_Motion_msg
#define config_Relay_fields &config_Relay_msg
#define config_Config_fields &config_Config_msg

/* Maximum encoded size of messages (where known) */
/* config_LDR_size depends on runtime parameters */
/* config_Relay_size depends on runtime parameters */
/* config_Config_size depends on runtime parameters */
#define CONFIG_CONFIG_PB_H_MAX_SIZE              config_Climate_size
#define config_Climate_size                      39
#define config_Motion_size                       28

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
